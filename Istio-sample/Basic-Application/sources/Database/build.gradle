plugins {
    id 'java'
    id 'org.liquibase.gradle' version '2.2.0'
}

java {
    sourceCompatibility = '17'
}

liquibase {
    activities {
        main {
            changelogfile "src/main/resources/changelog.xml"
            url System.getenv('LIQUIBASE_DATABASE_URL')
            username System.getenv('LIQUIBASE_DATABASE_USERNAME')
            password System.getenv('LIQUIBASE_DATABASE_PASSWORD')
            driver System.getenv('LIQUIBASE_DATABASE_DRIVER')
        }
    }
}

group = 'com.maiereni.webapp.sample'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.slf4j:slf4j-reload4j:2.1.0-alpha1'
    implementation 'commons-io:commons-io:2.18.0'
    implementation 'commons-beanutils:commons-beanutils:1.10.0'
    implementation 'org.apache.commons:commons-lang3:3.17.0'
    implementation 'org.apache.commons:commons-dbcp2:2.13.0'
    implementation 'org.liquibase:liquibase-core:4.31.0'
    compileOnly 'org.projectlombok:lombok:1.18.36'
    runtimeOnly 'org.postgresql:postgresql:42.7.5'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
    liquibaseRuntime 'org.liquibase:liquibase-core:4.31.0'
    liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:4.0.0'
    liquibaseRuntime 'info.picocli:picocli:4.7.6'
    liquibaseRuntime 'ch.qos.logback:logback-core:1.5.16'
    liquibaseRuntime 'org.postgresql:postgresql:42.7.5'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

apply plugin: 'org.liquibase.gradle'

jar {
    manifest {
        attributes "Main-Class": "com.maiereni.webapp.sample.Main"
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

task fatJar(type: Jar) {
    manifest.from jar.manifest
    archiveBaseName = 'all-in-one-jar'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}